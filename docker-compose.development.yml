version: '3.8'

networks: 
  backend_net:
    driver: bridge
  tools-net:
    driver: bridge
  mongo-compose-network:
    driver: bridge

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    user: "${MY_UID}:${MY_GID}"
    volumes:
      - ./.mongodb:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    restart: always
    networks:
      - backend_net
      - mongo-compose-network
    command: mongod --auth --bind_ip_all --bind_ip 0.0.0.0

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - mongodb
    networks: 
      - mongo-compose-network
    environment:
      - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
      - ME_CONFIG_MONGODB_PORT=${MONGO_PORT}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      #- ME_CONFIG_MONGODB_URL="${MONGO_URI}/?${MONGO_ARG}"
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    restart: always
    ports:
      - '8081:8081'

  copyme-backend:
    container_name: copyme-backend
    build:
      context: ./copy-me_backend
      dockerfile: Dockerfile
    image: ${CI_REGISTRY_IMAGE}/orchestrator-service:${TAG}
    ports:
      - "3000:${COPYME_BACKEND_PORT}" 
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${COPYME_BACKEND_PORT}
      - MONGO_URI=${MONGO_URI}/copymedb?${MONGO_ARG}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    restart: always
    networks:
      - backend_net

  
  