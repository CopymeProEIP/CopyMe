version: '3.8'

networks:
  frontend_net:
    driver: bridge  
  backend_net:
    driver: bridge

services:

  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - "--api.dashboard=true" # Enable the dashboard Traefik
      - "--providers.docker=true" # Use Docker like provider
      - "--entrypoints.web.address=:80" # Entrypoint HTTP
      - "--entrypoints.websecure.address=:443" # Entrypoint HTTPS
      - "--entrypoints.websecure.http.tls=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      #- "--certificatesresolvers.myresolver.acme.tlschallenge=true" # Method TLS-ALPN for Let's Encrypt
      #- "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_EMAIL}" # Email for Let's Encrypt
      #- "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" # Storage certificats
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
      - "8080:8080"  # Dashboard Traefik (optionnal)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # Docker access
      - "./certs:/certs"
      - "./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro"
      #- "./traefik/letsencrypt:/letsencrypt" # Storage certificats
      #- "./traefik/.htpasswd:/letsencrypt/.htpasswd"
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.traefik.rule=Host(`57.128.44.19:8080`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      #- "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      #- "traefik.http.routers.traefik.middlewares=auth"
      #- "traefik.http.middlewares.auth.basicauth.usersfile=/letsencrypt/.htpasswd"
    networks:
      - frontend_net
      - backend_net

  orchestrator:
    build:
      context: ./src/
      dockerfile: pre-prod.dockerfile
    image: ghcr.io/mpjunot/copyme/copyme-backend-api:latest
    volumes:
      - /home/ubuntu/models:/app/model/:ro
    expose:
      - "5000"
    networks:
      - backend_net
    restart: always
    labels:
      - "traefik.enable=true"
      #- "traefik.http.routers.orchestrator.rule=Host(`57.128.44.19:5000`)"
      - "traefik.http.routers.orchestrator.entrypoints=websecure"
      #- "traefik.http.routers.orchestrator.tls.certresolver=myresolver"
      - "traefik.http.services.orchestrator.loadbalancer.server.port=5000"

  nginx:
    image: nginx:latest
    container_name: nginx
    expose:
      - "80"  # Le service Nginx écoute sur le port 80
    networks:
      - frontend_net  # Réseau pour que Nginx soit sur le même réseau que Traefik
    labels:
      - "traefik.enable=true" # Active le service pour Traefik
      #- "traefik.http.routers.nginx.rule=Host(`57.128.44.19`)" # Règle pour Traefik
      - "traefik.http.routers.nginx.entrypoints=web" # Entrypoint HTTP (port 80)
      - "traefik.http.services.nginx.loadbalancer.server.port=80" # Port interne du service Nginx
    restart: always
  